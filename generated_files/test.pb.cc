// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ietf_dpdk {
class leaf_testingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<leaf_testing>
      _instance;
} _leaf_testing_default_instance_;
class system_login_userDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<system_login_user>
      _instance;
} _system_login_user_default_instance_;
class system_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<system_login>
      _instance;
} _system_login_default_instance_;
class systemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<system>
      _instance;
} _system_default_instance_;
}  // namespace ietf_dpdk
namespace protobuf_test_2eproto {
static void InitDefaultsleaf_testing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ietf_dpdk::_leaf_testing_default_instance_;
    new (ptr) ::ietf_dpdk::leaf_testing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ietf_dpdk::leaf_testing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_leaf_testing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsleaf_testing}, {}};

static void InitDefaultssystem_login_user() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ietf_dpdk::_system_login_user_default_instance_;
    new (ptr) ::ietf_dpdk::system_login_user();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ietf_dpdk::system_login_user::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_system_login_user =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssystem_login_user}, {}};

static void InitDefaultssystem_login() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ietf_dpdk::_system_login_default_instance_;
    new (ptr) ::ietf_dpdk::system_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ietf_dpdk::system_login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_system_login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssystem_login}, {}};

static void InitDefaultssystem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ietf_dpdk::_system_default_instance_;
    new (ptr) ::ietf_dpdk::system();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ietf_dpdk::system::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_system =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssystem}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_leaf_testing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_system_login_user.base);
  ::google::protobuf::internal::InitSCC(&scc_info_system_login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_system.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::leaf_testing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::leaf_testing, leaf_testing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system_login_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system_login_user, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system_login_user, full_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system_login_user, class__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system_login, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ietf_dpdk::system, domain_search_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ietf_dpdk::leaf_testing)},
  { 6, -1, sizeof(::ietf_dpdk::system_login_user)},
  { 14, -1, sizeof(::ietf_dpdk::system_login)},
  { 20, -1, sizeof(::ietf_dpdk::system)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ietf_dpdk::_leaf_testing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ietf_dpdk::_system_login_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ietf_dpdk::_system_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ietf_dpdk::_system_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "test.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ntest.proto\022\tietf_dpdk\"$\n\014leaf_testing\022"
      "\024\n\014leaf_testing\030\001 \001(\t\"\204\001\n\006system\022\021\n\thost"
      "_name\030\001 \001(\t\022\025\n\rdomain_search\030\002 \003(\t\032P\n\005lo"
      "gin\022\017\n\007message\030\001 \001(\t\0326\n\004user\022\014\n\004name\030\001 \001"
      "(\t\022\021\n\tfull_name\030\002 \001(\t\022\r\n\005class\030\003 \001(\tb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 204);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_test_2eproto
namespace ietf_dpdk {

// ===================================================================

void leaf_testing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int leaf_testing::kLeafTestingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

leaf_testing::leaf_testing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_leaf_testing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ietf_dpdk.leaf_testing)
}
leaf_testing::leaf_testing(const leaf_testing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leaf_testing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.leaf_testing().size() > 0) {
    leaf_testing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaf_testing_);
  }
  // @@protoc_insertion_point(copy_constructor:ietf_dpdk.leaf_testing)
}

void leaf_testing::SharedCtor() {
  leaf_testing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

leaf_testing::~leaf_testing() {
  // @@protoc_insertion_point(destructor:ietf_dpdk.leaf_testing)
  SharedDtor();
}

void leaf_testing::SharedDtor() {
  leaf_testing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void leaf_testing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* leaf_testing::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const leaf_testing& leaf_testing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_leaf_testing.base);
  return *internal_default_instance();
}


void leaf_testing::Clear() {
// @@protoc_insertion_point(message_clear_start:ietf_dpdk.leaf_testing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leaf_testing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool leaf_testing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ietf_dpdk.leaf_testing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string leaf_testing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leaf_testing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->leaf_testing().data(), static_cast<int>(this->leaf_testing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ietf_dpdk.leaf_testing.leaf_testing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ietf_dpdk.leaf_testing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ietf_dpdk.leaf_testing)
  return false;
#undef DO_
}

void leaf_testing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ietf_dpdk.leaf_testing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string leaf_testing = 1;
  if (this->leaf_testing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leaf_testing().data(), static_cast<int>(this->leaf_testing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.leaf_testing.leaf_testing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->leaf_testing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ietf_dpdk.leaf_testing)
}

::google::protobuf::uint8* leaf_testing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ietf_dpdk.leaf_testing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string leaf_testing = 1;
  if (this->leaf_testing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leaf_testing().data(), static_cast<int>(this->leaf_testing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.leaf_testing.leaf_testing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->leaf_testing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ietf_dpdk.leaf_testing)
  return target;
}

size_t leaf_testing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ietf_dpdk.leaf_testing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string leaf_testing = 1;
  if (this->leaf_testing().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leaf_testing());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void leaf_testing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ietf_dpdk.leaf_testing)
  GOOGLE_DCHECK_NE(&from, this);
  const leaf_testing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const leaf_testing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ietf_dpdk.leaf_testing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ietf_dpdk.leaf_testing)
    MergeFrom(*source);
  }
}

void leaf_testing::MergeFrom(const leaf_testing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ietf_dpdk.leaf_testing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.leaf_testing().size() > 0) {

    leaf_testing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaf_testing_);
  }
}

void leaf_testing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ietf_dpdk.leaf_testing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void leaf_testing::CopyFrom(const leaf_testing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ietf_dpdk.leaf_testing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool leaf_testing::IsInitialized() const {
  return true;
}

void leaf_testing::Swap(leaf_testing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void leaf_testing::InternalSwap(leaf_testing* other) {
  using std::swap;
  leaf_testing_.Swap(&other->leaf_testing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata leaf_testing::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void system_login_user::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int system_login_user::kNameFieldNumber;
const int system_login_user::kFullNameFieldNumber;
const int system_login_user::kClassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

system_login_user::system_login_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_system_login_user.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ietf_dpdk.system.login.user)
}
system_login_user::system_login_user(const system_login_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.full_name().size() > 0) {
    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  class__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_().size() > 0) {
    class__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class__);
  }
  // @@protoc_insertion_point(copy_constructor:ietf_dpdk.system.login.user)
}

void system_login_user::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  class__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

system_login_user::~system_login_user() {
  // @@protoc_insertion_point(destructor:ietf_dpdk.system.login.user)
  SharedDtor();
}

void system_login_user::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  class__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void system_login_user::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* system_login_user::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const system_login_user& system_login_user::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_system_login_user.base);
  return *internal_default_instance();
}


void system_login_user::Clear() {
// @@protoc_insertion_point(message_clear_start:ietf_dpdk.system.login.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  class__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool system_login_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ietf_dpdk.system.login.user)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ietf_dpdk.system.login.user.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string full_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->full_name().data(), static_cast<int>(this->full_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ietf_dpdk.system.login.user.full_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string class = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_().data(), static_cast<int>(this->class_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ietf_dpdk.system.login.user.class"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ietf_dpdk.system.login.user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ietf_dpdk.system.login.user)
  return false;
#undef DO_
}

void system_login_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ietf_dpdk.system.login.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.login.user.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string full_name = 2;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.login.user.full_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->full_name(), output);
  }

  // string class = 3;
  if (this->class_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_().data(), static_cast<int>(this->class_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.login.user.class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->class_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ietf_dpdk.system.login.user)
}

::google::protobuf::uint8* system_login_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ietf_dpdk.system.login.user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.login.user.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string full_name = 2;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.login.user.full_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->full_name(), target);
  }

  // string class = 3;
  if (this->class_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_().data(), static_cast<int>(this->class_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.login.user.class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->class_(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ietf_dpdk.system.login.user)
  return target;
}

size_t system_login_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ietf_dpdk.system.login.user)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string full_name = 2;
  if (this->full_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->full_name());
  }

  // string class = 3;
  if (this->class_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void system_login_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ietf_dpdk.system.login.user)
  GOOGLE_DCHECK_NE(&from, this);
  const system_login_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const system_login_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ietf_dpdk.system.login.user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ietf_dpdk.system.login.user)
    MergeFrom(*source);
  }
}

void system_login_user::MergeFrom(const system_login_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ietf_dpdk.system.login.user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.full_name().size() > 0) {

    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  if (from.class_().size() > 0) {

    class__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class__);
  }
}

void system_login_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ietf_dpdk.system.login.user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void system_login_user::CopyFrom(const system_login_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ietf_dpdk.system.login.user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool system_login_user::IsInitialized() const {
  return true;
}

void system_login_user::Swap(system_login_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void system_login_user::InternalSwap(system_login_user* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  full_name_.Swap(&other->full_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  class__.Swap(&other->class__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata system_login_user::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void system_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int system_login::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

system_login::system_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_system_login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ietf_dpdk.system.login)
}
system_login::system_login(const system_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ietf_dpdk.system.login)
}

void system_login::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

system_login::~system_login() {
  // @@protoc_insertion_point(destructor:ietf_dpdk.system.login)
  SharedDtor();
}

void system_login::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void system_login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* system_login::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const system_login& system_login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_system_login.base);
  return *internal_default_instance();
}


void system_login::Clear() {
// @@protoc_insertion_point(message_clear_start:ietf_dpdk.system.login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool system_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ietf_dpdk.system.login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ietf_dpdk.system.login.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ietf_dpdk.system.login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ietf_dpdk.system.login)
  return false;
#undef DO_
}

void system_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ietf_dpdk.system.login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.login.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ietf_dpdk.system.login)
}

::google::protobuf::uint8* system_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ietf_dpdk.system.login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.login.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ietf_dpdk.system.login)
  return target;
}

size_t system_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ietf_dpdk.system.login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void system_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ietf_dpdk.system.login)
  GOOGLE_DCHECK_NE(&from, this);
  const system_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const system_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ietf_dpdk.system.login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ietf_dpdk.system.login)
    MergeFrom(*source);
  }
}

void system_login::MergeFrom(const system_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ietf_dpdk.system.login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void system_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ietf_dpdk.system.login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void system_login::CopyFrom(const system_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ietf_dpdk.system.login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool system_login::IsInitialized() const {
  return true;
}

void system_login::Swap(system_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void system_login::InternalSwap(system_login* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata system_login::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void system::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int system::kHostNameFieldNumber;
const int system::kDomainSearchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

system::system()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2eproto::scc_info_system.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ietf_dpdk.system)
}
system::system(const system& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      domain_search_(from.domain_search_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_name().size() > 0) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  // @@protoc_insertion_point(copy_constructor:ietf_dpdk.system)
}

void system::SharedCtor() {
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

system::~system() {
  // @@protoc_insertion_point(destructor:ietf_dpdk.system)
  SharedDtor();
}

void system::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void system::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* system::descriptor() {
  ::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const system& system::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2eproto::scc_info_system.base);
  return *internal_default_instance();
}


void system::Clear() {
// @@protoc_insertion_point(message_clear_start:ietf_dpdk.system)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_search_.Clear();
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool system::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ietf_dpdk.system)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ietf_dpdk.system.host_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string domain_search = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_domain_search()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain_search(this->domain_search_size() - 1).data(),
            static_cast<int>(this->domain_search(this->domain_search_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ietf_dpdk.system.domain_search"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ietf_dpdk.system)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ietf_dpdk.system)
  return false;
#undef DO_
}

void system::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ietf_dpdk.system)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_name = 1;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host_name(), output);
  }

  // repeated string domain_search = 2;
  for (int i = 0, n = this->domain_search_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_search(i).data(), static_cast<int>(this->domain_search(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.domain_search");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->domain_search(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ietf_dpdk.system)
}

::google::protobuf::uint8* system::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ietf_dpdk.system)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_name = 1;
  if (this->host_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host_name(), target);
  }

  // repeated string domain_search = 2;
  for (int i = 0, n = this->domain_search_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_search(i).data(), static_cast<int>(this->domain_search(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ietf_dpdk.system.domain_search");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->domain_search(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ietf_dpdk.system)
  return target;
}

size_t system::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ietf_dpdk.system)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string domain_search = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->domain_search_size());
  for (int i = 0, n = this->domain_search_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->domain_search(i));
  }

  // string host_name = 1;
  if (this->host_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void system::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ietf_dpdk.system)
  GOOGLE_DCHECK_NE(&from, this);
  const system* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const system>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ietf_dpdk.system)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ietf_dpdk.system)
    MergeFrom(*source);
  }
}

void system::MergeFrom(const system& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ietf_dpdk.system)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  domain_search_.MergeFrom(from.domain_search_);
  if (from.host_name().size() > 0) {

    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
}

void system::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ietf_dpdk.system)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void system::CopyFrom(const system& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ietf_dpdk.system)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool system::IsInitialized() const {
  return true;
}

void system::Swap(system* other) {
  if (other == this) return;
  InternalSwap(other);
}
void system::InternalSwap(system* other) {
  using std::swap;
  domain_search_.InternalSwap(CastToBase(&other->domain_search_));
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata system::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ietf_dpdk
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ietf_dpdk::leaf_testing* Arena::CreateMaybeMessage< ::ietf_dpdk::leaf_testing >(Arena* arena) {
  return Arena::CreateInternal< ::ietf_dpdk::leaf_testing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ietf_dpdk::system_login_user* Arena::CreateMaybeMessage< ::ietf_dpdk::system_login_user >(Arena* arena) {
  return Arena::CreateInternal< ::ietf_dpdk::system_login_user >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ietf_dpdk::system_login* Arena::CreateMaybeMessage< ::ietf_dpdk::system_login >(Arena* arena) {
  return Arena::CreateInternal< ::ietf_dpdk::system_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ietf_dpdk::system* Arena::CreateMaybeMessage< ::ietf_dpdk::system >(Arena* arena) {
  return Arena::CreateInternal< ::ietf_dpdk::system >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
